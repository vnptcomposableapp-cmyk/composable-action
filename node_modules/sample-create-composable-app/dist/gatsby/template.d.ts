import { JsOrTs, SchemeType } from '../utils/types';
export declare function makeGatsbyDefaultPage(jsOrTs: JsOrTs): string;
export declare const GATSBY_404 = "const NotFound = () => {\n  return \"Not Found\";\n};\nexport default NotFound;\n";
export declare function GATSBY_PLUGIN_CONFIG(projectId: string, projectApiToken: string, jsOrTs: JsOrTs): string;
export declare function makeGatsbyHostPage(opts: {
    jsOrTs: JsOrTs;
    scheme: SchemeType;
}): string;
export declare const GATSBY_SSR_CONFIG = "/**\n * Implement Gatsby's SSR (Server Side Rendering) APIs in this file.\n *\n * See: https://www.gatsbyjs.com/docs/ssr-apis/\n */\n\nconst React = require(\"react\")\n\nconst HeadComponents = [\n  <script\n    key=\"plasmic-hmr\"\n    type=\"text/javascript\"\n    dangerouslySetInnerHTML={{\n      __html: `\n        if (typeof window !== \"undefined\" && /\\\\/plasmic-host\\\\/?$/.test(window.location.pathname)) {\n          const RealEventSource = window.EventSource;\n          window.EventSource = function(url, config) {\n            if (/[^a-zA-Z]hmr($|[^a-zA-Z])/.test(url)) {\n              console.warn(\"Plasmic: disabled EventSource request for\", url);\n              return {\n                onerror() {}, onmessage() {}, onopen() {}, close() {}\n              };\n            } else {\n              return new RealEventSource(url, config);\n            }\n          }\n        }\n      `,\n    }}\n  />\n]\n\nconst isProduction = process.env.NODE_ENV === \"production\"\n\nexports.onRenderBody = ({ pathname, setHeadComponents }) => {\n  /**\n   * We add the preamble tag script to all pages during development mode\n   * because during development all pages are dynamically rendered based\n   * on `/` route, during production we add it only in `/plasmic-host/`\n   */\n  if (!isProduction || pathname === \"/plasmic-host/\") {\n    setHeadComponents(HeadComponents)\n  }\n}\n";
export declare function makeGatsbyPlasmicInit(jsOrTs: JsOrTs): string;
export declare function wrapAppRootForCodegen(): string;
